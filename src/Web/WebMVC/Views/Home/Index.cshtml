@model HomeViewModel<DTOs.PlateDto>

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Test check.</p>
</div>
<div>
    @{/* Couldn't figure out to stop this resetting everything else, but I think that's okay for now (would have liked to have kept sorting though) */}
    <div>
        <form method="get" asp-action="Index">
            <div class="form-group">
                <label for="searchQuery">Search Plates:</label>
                <input type="text" class="form-control" id="searchQuery" name="searchQuery" value="@Model.PaginationState.SearchQuery" placeholder="Enter plate to search">
            </div>
            <button type="submit" class="btn btn-primary">Search</button>
        </form>
    </div>
    @if (Model != null && Model.Items.Any())
    {

        <table class="table">
            <thead>
                <tr>
                    <th>
                        <a href="@Url.Action("Index", Model.PaginationState.SetSortBy("Registration"))">
                            Plate
                            @if (Model.PaginationState.SortBy == "Registration")
                            {
                                <span>@(Model.PaginationState.SortDirection == "asc" ? "↑" : "↓")</span>
                            }
                        </a>
                    </th>
                    <th>
                        <a href="@Url.Action("Index", Model.PaginationState.SetSortBy("PurchasePrice"))">
                            Purchase Price
                            @if (Model.PaginationState.SortBy == "PurchasePrice")
                            {
                                <span>@(Model.PaginationState.SortDirection == "asc" ? "↑" : "↓")</span>
                            }
                        </a>
                    </th>
                    <th>
                        <a href="@Url.Action("Index", Model.PaginationState.SetSortBy("SalePrice"))">
                            Sale Price
                            @if (Model.PaginationState.SortBy == "SalePrice")
                            {
                                <span>@(Model.PaginationState.SortDirection == "asc" ? "↑" : "↓")</span>
                            }
                        </a>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var plate in Model.Items)
                {
                    <tr>
                        <td>@plate.Registration</td>
                        <td>@plate.PurchasePrice</td>
                        <td>@plate.CalculatedSalePrice</td>
                    </tr>
                }
            </tbody>
        </table>
        <nav>
            <ul class="pagination">
                <li class="page-item @(Model.PaginationState.CurrentPage <= 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", Model.PaginationState.SetPage(Model.PaginationState.CurrentPage - 1))">
                        Previous
                    </a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PaginationState.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", Model.PaginationState.SetPage(i))">
                            @i
                        </a>
                    </li>
                }
                <li class="page-item @(Model.PaginationState.CurrentPage >= Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", Model.PaginationState.SetPage(Model.PaginationState.CurrentPage + 1))">
                        Next
                    </a>
                </li>
            </ul>
        </nav>
    }
    else
    {
        <p>No plates available to display.</p>
    }
</div>
